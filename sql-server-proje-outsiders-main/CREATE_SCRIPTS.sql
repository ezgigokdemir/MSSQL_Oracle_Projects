--CREATE DATABASE HELP_DESK


CREATE TABLE [ROLE]
	(
	ID INT PRIMARY KEY IDENTITY (1,1),
	ROLE_NAME NVARCHAR(30) NOT NULL
	)


CREATE TABLE COMPANY
	(
	ID INT PRIMARY KEY IDENTITY(1,1),
	COMPANY_NAME NVARCHAR(255) NOT NULL,
	WEBSITE NVARCHAR(100) NOT NULL,
	COMPANY_EMAIL NVARCHAR(100) NOT NULL,
	FIXED_NUMBER NVARCHAR(15) NULL,
	RECORD_STATUS BIT DEFAULT 1
	)


CREATE TABLE PROVINCE
	(
	ID INT PRIMARY KEY IDENTITY(1,1),
	PROVINCE_NAME NVARCHAR(30) NOT NULL
	)


CREATE TABLE DISTRICT
	(
	ID INT PRIMARY KEY IDENTITY(1,1),
	DISTRICT_NAME NVARCHAR(50) NOT NULL,
	PROVINCEID INT NOT NULL,

	CONSTRAINT FK_DISTRICT_PROVINCE FOREIGN KEY (PROVINCEID)
		REFERENCES PROVINCE(ID)
	)


CREATE TABLE COMPANY_ADDRESS_MAPPING 
	(	
	ID INT PRIMARY KEY IDENTITY(1,1),
	COMPANYID INT NOT NULL,
	PROVINCEID INT NOT NULL,
	DISTRICTID INT NOT NULL,
	ADDRESS_LINE NVARCHAR(255) NULL,

	CONSTRAINT FK_ADDRESS_COMPANY FOREIGN KEY (COMPANYID)
	    REFERENCES COMPANY(ID),
	CONSTRAINT FK_ADDRESS_PROVINCE FOREIGN KEY (PROVINCEID)
	    REFERENCES PROVINCE(ID),
	CONSTRAINT FK_ADDRESS_DISTRICT FOREIGN KEY (DISTRICTID)
	    REFERENCES DISTRICT(ID)
	)


CREATE TABLE COMPANY_USER
	(
	ID INT PRIMARY KEY IDENTITY(1,1),
	COMPANY_USER_NAME NVARCHAR(50) NOT NULL,
	COMPANY_USER_SURNAME NVARCHAR(50) NOT NULL,
	MOBILE_NUMBER NVARCHAR(15) NOT NULL,
	COMPANY_USER_EMAIL NVARCHAR(50) NOT NULL,
	COMPANYID INT NOT NULL,
	CREATE_DATE DATETIME NOT NULL,
	MODIFICATION_DATE DATETIME NOT NULL,
	RECORD_STATUS BIT DEFAULT 1,
	ROLEID INT NOT NULL	

	CONSTRAINT FK_COMPANYUSER_COMPANY FOREIGN KEY (COMPANYID)
	    REFERENCES COMPANY(ID),
	CONSTRAINT FK_COMPANYUSER_ROLE FOREIGN KEY (ROLEID)
	    REFERENCES [ROLE](ID)
	)	


--CREATE TABLE COMPANY_USER_ROLE_MAPPING
--	(
--	ID INT PRIMARY KEY IDENTITY(1,1),
--	ROLEID INT NOT NULL,
--	COMPANY_USERID INT NOT NULL,
--	RECORD_STATUS BIT

--	CONSTRAINT FK_COMPANYUSERROLEMAPPING_ROLE FOREIGN KEY (ROLEID)
--	    REFERENCES ROLE(ID),
--	CONSTRAINT FK_COMPANYUSERROLEMAPPING_COMPANY_USER FOREIGN KEY (COMPANY_USERID)
--	    REFERENCES COMPANY_USER(ID)	
--	)	


CREATE TABLE PROFESSION
	(
	ID INT PRIMARY KEY IDENTITY(1,1),
	PROFESSION_NAME NVARCHAR(50) NOT NULL
	)


CREATE TABLE DEPARTMENT
	(
	ID INT PRIMARY KEY IDENTITY(1,1),
	DEPARTMENT_NAME NVARCHAR(50) NOT NULL
	)


CREATE TABLE EMPLOYEE
	(
	ID INT PRIMARY KEY IDENTITY(1,1),
	EMPLOYEE_NAME NVARCHAR(50) NOT NULL,
	EMPLOYEE_SURNAME NVARCHAR(50) NOT NULL,
	MOBILE_NUMBER NVARCHAR(15) NULL,
	EMPLOYEE_EMAIL NVARCHAR(50) NULL,
	PROFESSIONID INT NOT NULL,
	DEPARTMENTID INT NOT NULL,
	CREATE_DATE DATETIME NOT NULL,
	MODIFICATION_DATE DATETIME NOT NULL,
	RECORD_STATUS BIT DEFAULT 1,
	ROLEID INT NOT NULL	

	CONSTRAINT FK_EMPLOYEE_PROFESSION FOREIGN KEY (PROFESSIONID)
	    REFERENCES PROFESSION(ID),
	CONSTRAINT FK_EMPLOYEE_DEPARTMENT FOREIGN KEY (DEPARTMENTID)
	    REFERENCES DEPARTMENT(ID),
	CONSTRAINT FK_EMPLOYEE_ROLE FOREIGN KEY (ROLEID)
	    REFERENCES [ROLE](ID)
	)
		

--CREATE TABLE EMPLOYEE_ROLE_MAPPING
--	(
--	ID INT PRIMARY KEY IDENTITY(1,1),
--	ROLEID INT NOT NULL,
--	EMPLOYEEID INT NOT NULL,
--	RECORD_STATUS BIT DEFAULT 1

--	CONSTRAINT FK_EMPLOYEEROLEMAPPING_ROLE FOREIGN KEY (ROLEID)
--	    REFERENCES [ROLE](ID),
--	CONSTRAINT FK_EMPLOYEEROLEMAPPING_EMPLOYEE FOREIGN KEY (EMPLOYEEID)
--	    REFERENCES EMPLOYEE(ID)
--	)

	
CREATE TABLE ORDER_OF_URGENCY
	(
	ID INT PRIMARY KEY IDENTITY(1,1),
	URGENCY NVARCHAR(20) NOT NULL
	)


CREATE TABLE DEMAND_TYPE
	(
	ID INT PRIMARY KEY IDENTITY(1,1),
	[TYPE] NVARCHAR(20) NOT NULL
	)

	
CREATE TABLE LICENSE_PERIOD
	(
	ID INT PRIMARY KEY IDENTITY(1,1),
	[PERIOD] NVARCHAR(50) NOT NULL
	)


CREATE TABLE PRODUCT
	(
	ID INT PRIMARY KEY IDENTITY(1,1),
	PRODUCT_NAME NVARCHAR(100) NOT NULL,
	LICENSE_PERIODID INT NOT NULL,

	CONSTRAINT FK_PRODUCT_LICENSE_PERIOD FOREIGN KEY (LICENSE_PERIODID)
	    REFERENCES LICENSE_PERIOD(ID)
	)

		
CREATE TABLE [VERSION]
	(
	ID INT PRIMARY KEY IDENTITY(1,1),
	PRODUCTID INT NOT NULL,
	VERSIONNO NVARCHAR(20),
	CREATE_DATE DATETIME NOT NULL,
	RECORD_STATUS BIT DEFAULT 1

	CONSTRAINT FK_VERSION_PRODUCT FOREIGN KEY (PRODUCTID)
	    REFERENCES PRODUCT(ID)
	)


CREATE TABLE PRODUCT_EMPLOYEE_MAPPING
	(
	ID INT PRIMARY KEY IDENTITY(1,1),
	PRODUCTID INT NOT NULL,
	EMPLOYEEID INT NOT NULL,
	RECORD_STATUS BIT DEFAULT 1

	CONSTRAINT FK_PRODUCTEMPLOYEEMAPPING_PRODUCT FOREIGN KEY (PRODUCTID)
	    REFERENCES PRODUCT(ID),
	CONSTRAINT FK_PRODUCTEMPLOYEEMAPPING_EMPLOYEE FOREIGN KEY (EMPLOYEEID)
	    REFERENCES EMPLOYEE(ID)
	)


CREATE TABLE COMPANY_PRODUCT_MAPPING
	(
	ID INT PRIMARY KEY IDENTITY(1,1),
	PRODUCTID INT NOT NULL,
	COMPANYID INT NOT NULL,
	LICENSE_PERIOD_END_DATE DATETIME NOT NULL,
	CREATE_DATE DATETIME NOT NULL,
	RECORD_STATUS BIT DEFAULT 1

	CONSTRAINT FK_COMPANYPRODUCTMAPPING_PRODUCT FOREIGN KEY (PRODUCTID)
	    REFERENCES PRODUCT(ID),
	CONSTRAINT FK_COMPANYPRODUCTMAPPING_COMPANY FOREIGN KEY (COMPANYID)
	    REFERENCES COMPANY(ID)
	)


CREATE TABLE DEMAND_STATE
	(
	ID INT PRIMARY KEY IDENTITY(1,1),
	[STATE] NVARCHAR(15) NOT NULL
	)


CREATE TABLE DEMAND
	(
	ID INT PRIMARY KEY IDENTITY(1,1),
	TITLE NVARCHAR(MAX) NOT NULL,
	[TEXT] NVARCHAR(MAX) NOT NULL,
	DEMAND_TYPEID INT NOT NULL,
	ORDER_OF_URGENCYID INT NOT NULL,
	DEMAND_STATEID INT NULL,
	CLOSING_STATEMENT NVARCHAR(MAX) NULL,
	CLOSING_DATE  DATETIME NULL,
	COMPANY_USERID INT NOT NULL,
	EMPLOYEEID INT NULL,	
	PRODUCTID INT NOT NULL,
	SOLVED_HOUR INT NULL,
	VERSIONID INT NOT NULL,
	CREATE_DATE DATETIME NOT NULL,
	MODIFICATION_DATE DATETIME NOT NULL,
	RECORD_STATUS BIT DEFAULT 1

	CONSTRAINT FK_DEMAND_DEMAND_TYPE FOREIGN KEY (DEMAND_TYPEID)
	    REFERENCES DEMAND_TYPE(ID),
	CONSTRAINT FK_DEMAND_ORDER_OF_URGENCY FOREIGN KEY (ORDER_OF_URGENCYID)
	    REFERENCES ORDER_OF_URGENCY(ID),
	CONSTRAINT FK_DEMAND_DEMAND_STATE FOREIGN KEY (DEMAND_STATEID)
	    REFERENCES DEMAND_STATE(ID),
	CONSTRAINT FK_DEMAND_COMPANY_USER FOREIGN KEY (COMPANY_USERID)
	    REFERENCES COMPANY_USER(ID),
	CONSTRAINT FK_DEMAND_EMPLOYEE FOREIGN KEY (EMPLOYEEID)
	    REFERENCES EMPLOYEE(ID),
	CONSTRAINT FK_DEMAND_PRODUCT FOREIGN KEY (PRODUCTID)
	    REFERENCES PRODUCT(ID),
	CONSTRAINT FK_DEMAND_VERSION FOREIGN KEY (VERSIONID)
	    REFERENCES [VERSION](ID)
	)


